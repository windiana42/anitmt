object MyObj
{
	method foo()
	{
		17;
		a=17;
		1+2+3+4;
		a++;
		azo=3;
		foo(17);
		a=<1,2,3>;
		a = (1>2) ? 1 : 2;
		a = <1,2,(3>1) ?: 2>;
		<1,2,(3>++b) ?: 1>;
		//1>- -3;  // <--
		//#include "test2.txt"
		
		myobj.foo();
		myobj->pov(file="test.pov");
	}
	
	vector member;
	int member2;
	string member3;
	const int member_const=111;
	
	int foo2(int a,int b=3,scalar c=6,vector<7> v)
	{
		if(i==7)
		{ foo(); }
		else
		 hoo();

		if(i)
			if(j)
				a();
			else
				b();
		else
			c();


		if(i)
			if(j)
				a();
			else if(k)
				b();
			else
				c();
		else if(l)
			d();
		else
			e();
		
		for(;;){}
		while(1){}
		if(1) { if(2) ; } else ;
		
		/*********************************/
		// DANGLING ELSE PROBLEM TEST CASE: 
		
		dangling_else=2;
		if(a==1)
		{
			if(b==2)
				foo1();
		}
		else
			foo(2);
		
		return(c+2);
	}
	
	matrix<2,3> fooo(int x)
	{
		for(int i=17; i<100; i++)
			for(;;)
				for(vector v; ; --i);
		for(;;j=f())
			while(1)
		{  ++i; i--;  sin(x=3,y=6);  }

		-a=b;
	}
}

object AnotherObject
{
	vector z;
	vector<3> z2,z2=<1,2,3>;

	matrix<1,2> m1;
	
	method m(MyObj v,AnotherObject oo)
	{
		// Cast expr: 
		vector<3>(<1,2,3>);
		
		vector<2+3> v;
		vector<I> j;
		a=j.x;
		
		int x[]={1,2,3+4};
		int y={};
		int z={{1,2,4+4},{2+4},2};
		
		foo(points={<1,2>,<1,2>,<a,b>},10,{});
		
		foo(points={1,2, },p2={,1,2},p3={,1,2,},p4={,});
		
		foo({1,2,3});
		
		x={1,2,3};
		
		y+={,3};
		
		AnotherObject obj=this;
		
		blah blah=blah;
		
		vector arr[17][1];
		
		r=AnotherObject::m1.y;
		AnotherObject::m.normalize(r=7);
	}
	
	method goo(int x[]={1,2,3},int z,MyObj a)
	{
	}
	
	goo2(MyObj &ref,int &ref2)
	{
		ref.x=sin(cos(tan(hypot(x=PI))));
		ref2=17;
	}
	
	AnotherObject() {}
	~AnotherObject() {}
}

object FOO {}
