This is HLIB. 

Q: What license is HLIB published under?
A: HLIB has two parts: 
   * One is published under the GNU General Public License version 2, 
     see COPYING.GPL for details. 
     This part is basically everything in the fd/ and crypto/ directories 
     and some files in misc/. 
   * The other part is published under the GNU Library General Public 
     License, version 2.1, see COPYING.LGPL for details. 
     This is the code in the directories cpp/ and par/ and some files 
     in misc/. 
   Please check the comment at the beginning of the source code file in 
   question to see which license the file is published under. 

   Note that the license distribution is not random; it is chosen in a 
   way that you may use the parameter system and things like RefString, 
   and the linked list under the terms of the LGPL but as soon as you 
   use the real hlib core (fd and process manager, etc.) you must stick 
   to really free GPL. 

Q: Why is it called HLIB?
A: `LIB' stands for `library' and `H' is just the next letter after 
   `G' (as used by `GNU'). `glib' was already taken, (belongs to GTK). 

Q: Can I extend HLIB with my own functions?
A: Of course. The best idea is probably if you create your own sub-directory 
   (like misc/ or fd/) and put your code in there. Add your subdir to 
   the SUBDIRS value in Makefile.am and provide an own Makefile.am 
   along with your code (have a look at my ones for working examples). 
   That's all; everything should work that simple. 

Q: What platforms does HLIB run on?
A: It runs under Linux-2.2 and Linux-2.4 with >=glibc-2.1 and gcc>=2.95. 
   It will probably run on other platforms with minor modifications or 
   maybe even as it is; I did not try out yet. 

Q: I found a bug in HLIB. Whom do I contact?
A: The guy who put his name in the comment at the beginning of the source 
   code file the bug is in. 

Q: What's HLIB's goal?
A: To be 
   * flexible, 
   * modular in desing, 
   * fast and 
   * small (as of executable size). 
   For this reason, 
   - C++ exceptions, 
   - runtime type identification and 
   - the standard C++ library (libstdc++ / STL)
   are not used by HLIB. 

